{"version":3,"file":"worker.mjs","sources":["../src/worker.ts"],"sourcesContent":["import {Env} from \"../bindings\";\nimport {PostDataResponse, GetDataResponse} from \"./Data\"\n\nexport default {\n\tfetch: async function (request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n\n\t\tconst url = new URL(request.url);\n\t\tconst searchParams = new URLSearchParams(url.searchParams);\n\n\t\tswitch (request.method) {\n\t\t\tcase 'POST':\n\t\t\t\tlet newlist: PostDataResponse[] = [];\n\t\t\t\tfor (const searchParam of searchParams) {\n\t\t\t\t\tconst value = await env.KV_FROM_FIRDAUS.get(searchParam[0]);\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tawait env.KV_FROM_FIRDAUS.put(searchParam[0], searchParam[1]);\n\t\t\t\t\t\tnewlist.push({\n\t\t\t\t\t\t\tname: searchParam[0],\n\t\t\t\t\t\t\tvalue: searchParam[1]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn new Response(JSON.stringify(newlist[0]), {\n\t\t\t\t\tstatus: 201\n\t\t\t\t});\n\t\t\tcase 'GET':\n\t\t\t\tlet response:GetDataResponse = {};\n\t\t\t\tconst splitData = url.pathname.split(\"/\");\n\t\t\t\tconst key = splitData[splitData.length -1];\n\t\t\t\tconst value = await env.KV_FROM_FIRDAUS.get(key);\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tresponse = {\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t};\n\t\t\t\t\treturn new Response(JSON.stringify(response));\n\t\t\t\t}\n\t\t\t\tresponse = {\n\t\t\t\t\terror: `Cannot found the data for ${key}, API_TOKEN=${env.API_TOKEN}, SECRET_KEY=${env.SECRET_KEY}`\n\t\t\t\t};\n\t\t\t\treturn new Response(JSON.stringify(response), {\n\t\t\t\t\tstatus: 403\n\t\t\t\t});\n\t\t}\n\t\tconst response: GetDataResponse= {\n\t\t\terror: `Method ${request.method} not supported, API_TOKEN=${env.API_TOKEN}, SECRET_KEY=${env.SECRET_KEY}`\n\t\t};\n\t\treturn new Response(JSON.stringify(response));\n\t},\n};\n\n"],"names":[],"mappings":"AAGA,aAAe;AACd,IAAA,KAAK,EAAE,gBAAgB,OAAgB,EAAE,GAAQ,EAAE,GAAqB,EAAA;QAEvE,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,YAAY,GAAG,IAAI,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE3D,QAAQ,OAAO,CAAC,MAAM;AACrB,YAAA,KAAK,MAAM;gBACV,IAAI,OAAO,GAAuB,EAAE,CAAC;AACrC,gBAAA,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;AACvC,oBAAA,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5D,IAAI,KAAK,KAAK,IAAI,EAAE;AACnB,wBAAA,MAAM,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC9D,OAAO,CAAC,IAAI,CAAC;AACZ,4BAAA,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;AACpB,4BAAA,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;AACrB,yBAAA,CAAC,CAAC;AACH,qBAAA;AACD,iBAAA;AACD,gBAAA,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AAC/C,oBAAA,MAAM,EAAE,GAAG;AACX,iBAAA,CAAC,CAAC;AACJ,YAAA,KAAK,KAAK;gBACT,IAAI,QAAQ,GAAmB,EAAE,CAAC;gBAClC,MAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1C,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC;gBAC3C,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,KAAK,KAAK,IAAI,EAAE;AACnB,oBAAA,QAAQ,GAAG;wBACV,GAAG;wBACH,KAAK;qBACL,CAAC;oBACF,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9C,iBAAA;AACD,gBAAA,QAAQ,GAAG;oBACV,KAAK,EAAE,CAA6B,0BAAA,EAAA,GAAG,CAAe,YAAA,EAAA,GAAG,CAAC,SAAS,CAAgB,aAAA,EAAA,GAAG,CAAC,UAAU,CAAE,CAAA;iBACnG,CAAC;gBACF,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;AAC7C,oBAAA,MAAM,EAAE,GAAG;AACX,iBAAA,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,MAAM,QAAQ,GAAmB;AAChC,YAAA,KAAK,EAAE,CAAA,OAAA,EAAU,OAAO,CAAC,MAAM,CAAA,0BAAA,EAA6B,GAAG,CAAC,SAAS,CAAA,aAAA,EAAgB,GAAG,CAAC,UAAU,CAAE,CAAA;SACzG,CAAC;QACF,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC9C;CACD;;;;"}